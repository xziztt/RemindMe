import 'package:flutter/cupertino.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';

class PushNotifications with ChangeNotifier {
  static final PushNotifications _pushNotifications =
      PushNotifications._internal();

  factory PushNotifications() {
    return _pushNotifications;
  }

  final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
      FlutterLocalNotificationsPlugin();

  static const channel_id = "245";
  PushNotifications._internal();

  Future<void> initState() async {
    initState();
    final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
        FlutterLocalNotificationsPlugin();

    final AndroidInitializationSettings androidInitializationSettings =
        AndroidInitializationSettings(null);

    final InitializationSettings initializationSettings =
        InitializationSettings(
            android: androidInitializationSettings, iOS: null, macOS: null);

    await flutterLocalNotificationsPlugin.initialize(initializationSettings,
        onSelectNotification: onSelectNotification);
  }

  Future onSelectNotification(String payload) async {
    print(payload);
  }

  /* Future notify(String payload) async {
    flutterLocalNotificationsPlugin.show(
        245, 'notif triggered', 'notif triggered', platformChannelSpecifics,
        payload: "welcome to notification");
  }*/
  showNotification() async {
    var android = AndroidNotificationDetails('id', 'channel ', 'description',
        priority: Priority.high, importance: Importance.max);
    var iOS = IOSNotificationDetails();
    var platform =
        new NotificationDetails(android: android, iOS: null, macOS: null);
    await flutterLocalNotificationsPlugin.show(
        0, 'Flutter devs', 'Flutter Local Notification Demo', platform,
        payload: 'Welcome to the Local Notification demo');
  }
}

/*static const AndroidNotificationDetails androidPlatformChannelSpecifics =
      AndroidNotificationDetails(channel_id, "channel1", "nodesc",
          importance: Importance.max, priority: Priority.high, showWhen: false);

  static const NotificationDetails platformChannelSpecifics =
      NotificationDetails(android: androidPlatformChannelSpecifics); */
